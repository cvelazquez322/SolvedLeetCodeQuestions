
# Given an array nums and a value val, remove all instances of that value in-place and return the new length.

# Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.

# The order of elements can be changed. It doesn't matter what you leave beyond the new length.

class Solution:
    def removeElement(self, nums: List[int], val: int) -> int:
        if len(nums) == 0:
            return 0
        pos = 0
        counter = 0
        while len(nums) > pos:
            if nums[pos] == val:
                nums.pop(pos)
                counter += 1
                pos -= 1
            pos += 1
        return len(nums)